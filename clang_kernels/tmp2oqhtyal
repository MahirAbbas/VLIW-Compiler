typedef float float2 __attribute__((aligned(8),vector_size(8)));
typedef float float4 __attribute__((aligned(16),vector_size(16)));
void r_240_28_7_5_4_5(float* restrict data0, float* restrict data1, float* restrict data2, float* restrict data3, float* restrict data4, float* restrict data5, float* restrict data6) {
  float2 cast0 = (float2){0.0f,0.0f};
  for (int ridx0 = 0; ridx0 < 240; ridx0++) {
    int alu0 = (ridx0*784);
    for (int ridx1 = 0; ridx1 < 28; ridx1++) {
      int alu1 = (ridx1*28);
      for (int ridx2 = 0; ridx2 < 7; ridx2++) {
        int alu2 = (ridx2<<2);
        float acc0 = 0.0f;
        float acc1 = 0.0f;
        float acc2 = 0.0f;
        float acc3 = 0.0f;
        for (int ridx3 = 0; ridx3 < 5; ridx3++) {
          int alu3 = (alu2+alu0+alu1+(ridx3*28));
          int alu4 = (ridx1+ridx3);
          _Bool alu5 = (((alu4<2)!=1)&(alu4<30));
          int alu6 = (ridx0+(ridx3*1200));
          float val0 = *(data2+alu6+240);
          float val1 = *(data2+alu6+480);
          float val2 = *(data2+alu6+720);
          float val3 = *(data2+alu6+960);
          float val4 = *(data2+alu6);
          float2 val5 = ((alu5&((ridx2<1)!=1))?*((float2*)(data1+alu3+-58)):cast0);
          float2 val6 = ((alu5&(ridx2<6))?*((float2*)(data1+alu3+-52)):cast0);
          float4 val7 = (alu5?*((float4*)(data1+alu3+-56)):(float4){0.0f,0.0f,0.0f,0.0f});
          acc0 = (acc0+(val5[0]*val4)+(val5[1]*val0)+(val7[0]*val1)+(val7[1]*val2)+(val7[2]*val3));
          acc1 = (acc1+(val5[1]*val4)+(val7[0]*val0)+(val7[1]*val1)+(val7[2]*val2)+(val7[3]*val3));
          acc2 = (acc2+(val7[0]*val4)+(val7[1]*val0)+(val7[2]*val1)+(val7[3]*val2)+(val6[0]*val3));
          acc3 = (acc3+(val7[1]*val4)+(val7[2]*val0)+(val7[3]*val1)+(val6[0]*val2)+(val6[1]*val3));
        }
        float val8 = *(data3+ridx0);
        float val9 = *(data4+ridx0);
        float val10 = *(data5+ridx0);
        float alu7 = __builtin_sqrtf((1/(val10+1e-05f)));
        float val11 = *(data6+ridx0);
        *((float4*)(data0+alu0+alu1+alu2)) = (float4){(((acc0-val8)*val9*alu7)+val11),(((acc1-val8)*val9*alu7)+val11),(((acc2-val8)*val9*alu7)+val11),(((acc3-val8)*val9*alu7)+val11)};
      }
    }
  }
}