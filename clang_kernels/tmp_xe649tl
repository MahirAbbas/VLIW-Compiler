typedef float float2 __attribute__((aligned(8),vector_size(8)));
void r_80_14_14_3_3_3(float* restrict data0, float* restrict data1, float* restrict data2, float* restrict data3, float* restrict data4, float* restrict data5, float* restrict data6) {
  float2 cast0 = (float2){0.0f,0.0f};
  for (int ridx0 = 0; ridx0 < 80; ridx0++) {
    int alu0 = (ridx0*3);
    int alu1 = (alu0+1);
    int alu2 = (alu0+2);
    for (int ridx1 = 0; ridx1 < 14; ridx1++) {
      _Bool alu3 = (ridx1<13);
      for (int ridx2 = 0; ridx2 < 14; ridx2++) {
        int alu4 = ((ridx0*588)+(ridx1*14)+ridx2);
        int alu5 = ((ridx2<<1)+(ridx1*56)+(ridx0*2352));
        _Bool alu6 = (ridx2<13);
        _Bool alu7 = (alu3&alu6);
        float val0 = (alu6?*(data1+alu5+2):0.0f);
        float val1 = (alu6?*(data1+alu5+30):0.0f);
        float val2 = (alu7?*(data1+alu5+58):0.0f);
        float val3 = (alu6?*(data1+alu5+786):0.0f);
        float val4 = (alu6?*(data1+alu5+814):0.0f);
        float val5 = (alu7?*(data1+alu5+842):0.0f);
        float val6 = (alu6?*(data1+alu5+1570):0.0f);
        float val7 = (alu6?*(data1+alu5+1598):0.0f);
        float val8 = (alu7?*(data1+alu5+1626):0.0f);
        float val9 = *(data2+alu1);
        float val10 = *(data2+alu2);
        float val11 = *(data2+alu0+240);
        float val12 = *(data2+alu0+241);
        float val13 = *(data2+alu0+242);
        float val14 = *(data2+alu0+480);
        float val15 = *(data2+alu0+481);
        float val16 = *(data2+alu0+482);
        float val17 = *(data2+alu0+720);
        float val18 = *(data2+alu0+721);
        float val19 = *(data2+alu0+722);
        float val20 = *(data2+alu0+960);
        float val21 = *(data2+alu0+961);
        float val22 = *(data2+alu0+962);
        float val23 = *(data2+alu0+1200);
        float val24 = *(data2+alu0+1201);
        float val25 = *(data2+alu0+1202);
        float val26 = *(data2+alu0+1440);
        float val27 = *(data2+alu0+1441);
        float val28 = *(data2+alu0+1442);
        float val29 = *(data2+alu0+1680);
        float val30 = *(data2+alu0+1681);
        float val31 = *(data2+alu0+1682);
        float val32 = *(data2+alu0+1920);
        float val33 = *(data2+alu0+1921);
        float val34 = *(data2+alu0+1922);
        float val35 = *(data2+alu0);
        float val36 = *(data3+alu1);
        float val37 = *(data3+alu2);
        float val38 = *(data3+alu0);
        float val39 = *(data4+alu1);
        float val40 = *(data4+alu2);
        float val41 = *(data4+alu0);
        float val42 = *(data5+alu1);
        float val43 = *(data5+alu2);
        float val44 = *(data5+alu0);
        float val45 = *(data6+alu1);
        float val46 = *(data6+alu2);
        float val47 = *(data6+alu0);
        float2 val48 = *((float2*)(data1+alu5+28));
        float2 val49 = (alu3?*((float2*)(data1+alu5+56)):cast0);
        float2 val50 = *((float2*)(data1+alu5+784));
        float2 val51 = *((float2*)(data1+alu5+812));
        float2 val52 = (alu3?*((float2*)(data1+alu5+840)):cast0);
        *(data0+alu4+196) = (((((val50[0]*val9)+(val51[0]*val18)+(val52[0]*val27)+(val50[1]*val12)+(val51[1]*val21)+(val52[1]*val30)+(val3*val15)+(val4*val24)+(val5*val33))-val36)*val39*__builtin_sqrtf((1/(val42+1e-05f))))+val45);
        float2 val53 = *((float2*)(data1+alu5+1568));
        float2 val54 = *((float2*)(data1+alu5+1596));
        float2 val55 = (alu3?*((float2*)(data1+alu5+1624)):cast0);
        *(data0+alu4+392) = (((((val53[0]*val10)+(val54[0]*val19)+(val55[0]*val28)+(val53[1]*val13)+(val54[1]*val22)+(val55[1]*val31)+(val6*val16)+(val7*val25)+(val8*val34))-val37)*val40*__builtin_sqrtf((1/(val43+1e-05f))))+val46);
        float2 val56 = *((float2*)(data1+alu5));
        *(data0+alu4) = (((((val56[0]*val35)+(val48[0]*val17)+(val49[0]*val26)+(val56[1]*val11)+(val48[1]*val20)+(val49[1]*val29)+(val0*val14)+(val1*val23)+(val2*val32))-val38)*val41*__builtin_sqrtf((1/(val44+1e-05f))))+val47);
      }
    }
  }
}